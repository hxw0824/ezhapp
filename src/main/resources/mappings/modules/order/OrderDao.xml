<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.order.dao.OrderDao">
    
	<sql id="orderColumns">
		a.id AS "id",
		a.order_no AS "orderNumber",
		a.trade_no AS "tradeno",
		a.order_title AS "orderTitle",
		a.p_sncode AS "psncode",
		a.userid AS "userid",
		a.sale_price AS "salePrice",
		a.is_pay AS "isPay",
		a.pay_time AS "payTime",
		a.period_id AS "periodId",
		a.expire_time AS "expireTime",
		a.timeout_express AS "timeoutexpress",
		a.status AS "status",
		a.pay_type AS "payType",
		b.original_price AS "product.originalprice",
		b.sale_price AS "product.saleprice",
		c.login_name AS "cuser.login_name",
		c.nick_name AS "cuser.nickName",
		c.user_token AS "cuser.userToken",
		c.level AS "cuser.level"
	</sql>
	
	<sql id="orderJoins">
	LEFT JOIN products b ON a.p_sncode = b.p_sncode
	LEFT JOIN c_user c  ON a.userid = c.id
	</sql>
    
	<select id="get" resultType="Order">
		SELECT 
			<include refid="orderColumns"/>
		FROM orders a
		<include refid="orderJoins"/>
		WHERE a.id = #{id}
	</select>
	<select id="getByOrderNo" resultType="Order">
		SELECT 
			<include refid="orderColumns"/>
		FROM orders a
		<include refid="orderJoins"/>
		WHERE a.order_no = #{0}
	</select>
	
	<select id="findList" resultType="Order">
		SELECT 
			<include refid="orderColumns"/>
		FROM orders a
		<include refid="orderJoins"/>
		<where>
			<if test="userid != null and userid != ''">
				a.userid = #{userid}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Order">
		SELECT 
			<include refid="orderColumns"/>
		FROM orders a
		<include refid="orderJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO orders(
			id,
			order_no,
			order_title,
			trade_no,
			p_sncode,
			period_id,
			timeout_express,
			userid,
			sale_price,
			is_pay,
			pay_time,
			expire_time,
			status,
			pay_type
		) VALUES (
			#{id},
			#{orderNumber},
			#{orderTitle},
			#{tradeno},
			#{psncode},
			#{periodId},
			#{timeoutexpress},
			#{userid},
			#{salePrice},
			#{isPay},
			#{payTime},
			#{expireTime},
			#{status},
			#{payType}
		)
	</insert>
	
	<update id="update">
		UPDATE orders SET 	
			order_no = #{orderNumber},
			order_title = #{orderTitle},
			trade_no = #{tradeno},
			p_sncode = #{psncode},
			period_id = #{periodId},
			timeout_express = #{timeoutexpress},
			userid = #{userid},
			sale_price = #{salePrice},
			is_pay = #{isPay},
			pay_time = #{payTime},
			expire_time = #{expireTime},
			status = #{status}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM orders
		WHERE id = #{id}
	</update>
	
	<!-- 根据订单号及用户ID查询订单 -->
	<select id="getByOrderNoAndUserId" resultType="Order">
		SELECT
			a.order_no AS "orderNumber",
			a.order_title AS "orderTitle",
			a.p_sncode AS "psncode",
			a.userid AS "userid",
			a.sale_price AS "salePrice",
			a.is_pay AS "isPay",
			a.pay_time AS "payTime",
			a.expire_time AS "expireTime"
		FROM orders a
		LEFT JOIN products b ON a.p_sncode = b.p_sncode
		LEFT JOIN c_user c  ON a.userid = c.id
		WHERE a.order_no = #{orderNo}
	</select>
</mapper>