<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.sys.dao.CTemperatureDao">
    
	<sql id="cTemperatureColumns">
		a.id AS "id",
		a.user_id AS "userId",
		a.class_id AS "classId",
		a.office_id AS "officeId",
		a.temper_val AS "temperVal",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		u2.name AS "userName",
		c2.name AS "className"
	</sql>
	
	<sql id="cTemperatureJoins">
		LEFT JOIN sys_user u2 ON u2.id = a.user_id
		LEFT JOIN c_class c2 ON c2.id = a.class_id
	</sql>
    
	<select id="get" resultType="CTemperature">
		SELECT 
			<include refid="cTemperatureColumns"/>
		FROM c_temperature a
		<include refid="cTemperatureJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CTemperature">
		SELECT 
			<include refid="cTemperatureColumns"/>
		FROM c_temperature a
		<include refid="cTemperatureJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CTemperature">
		SELECT 
			<include refid="cTemperatureColumns"/>
		FROM c_temperature a
		<include refid="cTemperatureJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO c_temperature(
			id,
			user_id,
			class_id,
			office_id,
			temper_val,
			create_date,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{userId},
			#{classId},
			#{officeId},
			#{temperVal},
			#{createDate},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE c_temperature SET 	
			user_id = #{userId},
			class_id = #{classId},
			office_id = #{officeId},
			temper_val = #{temperVal},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM c_temperature
		WHERE id = #{id}
	</update>
	
	<select id="findListByOfficeId" resultType="CTemperature">
		SELECT 
			<include refid="cTemperatureColumns"/>
		FROM c_temperature a
		<include refid="cTemperatureJoins"/>
		WHERE a.office_id = #{officeId}
		<if test="userId != null and userId != ''">
			AND a.user_id = #{userId}
		</if>
		<if test="classId != null and classId != ''">
			AND a.class_id = #{classId}
		</if>
		<if test="beginDate != null and beginDate != ''">
			<![CDATA[
				AND DATE_FORMAT(a.create_date,'%Y-%m-%d') >= DATE_FORMAT(#{beginDate},'%Y-%m-%d')
			]]>
		</if>
		<if test="endDate != null and endDate != ''">
			<![CDATA[
				AND DATE_FORMAT(a.create_date,'%Y-%m-%d') <= DATE_FORMAT(#{endDate},'%Y-%m-%d')
			]]>
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY c2.period,c2.create_date,a.user_id,a.create_date
			</otherwise>
		</choose>
	</select>
	
</mapper>